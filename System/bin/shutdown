#!/bin/sh

task_killer() {
	r=0
	for p in $1; do
		if [ -d "/proc/$p" ] && [ $p -ne $$ ]; then
			kill $2 $p
			r=1
		fi
	done
	return $r
}

kill_hooked_tasks() {
	c=0
	while [ $c -lt 5 ]; do
		pids=$(fuser -m /mnt/SDCARD)
		if task_killer "$pids" $1; then
			return
		fi
		sleep 0.05
		c=$((c + 1))
	done
}

if [ "$0" = "/tmp/_shutdown" ]; then

	killall -9 S99runtrimui # mandatory to avoid the suppression of .tmp_update !
	killall -9 runtrimui.sh
	killall -9 smbd
	killall -9 trimui_inputd
	killall -9 trimui_scened
	killall -9 keymon
	killall -9 dropbear
	killall -9 MainUI

	kill_hooked_tasks
	sleep 0.1
	kill_hooked_tasks -9

	sync

	swapoff /mnt/SDCARD/cachefile
	umount -r /mnt/SDCARD
	umount /mnt/SDCARD

	############# DEBUG #############
	# fuser -m /mnt/SDCARD > /mnt/UDISK/shutdown.log
	# lsof /mnt/SDCARD >> /mnt/UDISK/shutdown.log
	# mount >> /mnt/UDISK/shutdown.log
	#################################

	echo ondemand >/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
	echo 408000 >/sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
	echo 816000 >/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq

	if [ "$1" = "-r" ]; then
		/sbin/reboot
	else
		/sbin/poweroff
	fi

fi

if [ ! -f /tmp/_shutdown ]; then
	cp -f "$0" /tmp/_shutdown
fi

# run the script totally detached from current shell
pgrep -f /tmp/_shutdown || (
	set -m
	su root -c "/usr/bin/nohup /tmp/_shutdown $1 </dev/null >/dev/null 2>&1 &"
)
while true; do
	sleep 10
done
